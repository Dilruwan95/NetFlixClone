[{"D:\\projects\\React\\netflixclone\\src\\index.js":"1","D:\\projects\\React\\netflixclone\\src\\reportWebVitals.js":"2","D:\\projects\\React\\netflixclone\\src\\App.js":"3","D:\\projects\\React\\netflixclone\\src\\Component\\Row.js":"4","D:\\projects\\React\\netflixclone\\src\\Requests.js":"5","D:\\projects\\React\\netflixclone\\src\\axios.js":"6","D:\\projects\\React\\netflixclone\\src\\Component\\Banner.js":"7","D:\\projects\\React\\netflixclone\\src\\Component\\Nav.js":"8"},{"size":543,"mtime":1611213777148,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1003,"mtime":1611582360958,"results":"12","hashOfConfig":"10"},{"size":1866,"mtime":1611589551370,"results":"13","hashOfConfig":"10"},{"size":709,"mtime":1611511881828,"results":"14","hashOfConfig":"10"},{"size":150,"mtime":1611513116007,"results":"15","hashOfConfig":"10"},{"size":1596,"mtime":1611581964727,"results":"16","hashOfConfig":"10"},{"size":397,"mtime":1611583157672,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"jr3v19",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\React\\netflixclone\\src\\index.js",[],["36","37"],"D:\\projects\\React\\netflixclone\\src\\reportWebVitals.js",[],"D:\\projects\\React\\netflixclone\\src\\App.js",[],"D:\\projects\\React\\netflixclone\\src\\Component\\Row.js",["38"],"import React,{useState,useEffect} from 'react';\r\nimport axios from '../axios';\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst baseURL = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({title, fetchUrl,isLargeRow}) {  \r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect( () =>{\r\n        async function fetchData(){\r\n           const request = await axios.get(fetchUrl);\r\n          // console.log(request.data.results);\r\n           setMovies(request.data.results)\r\n           return request;\r\n        }\r\n        fetchData();\r\n    },[fetchUrl])\r\n\r\n\r\n    const opts = {\r\n        heigth:\"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n\r\n            autoplay:1,\r\n        }\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl){\r\n            setTrailerUrl(\"\");\r\n        }\r\n        else {\r\n          movieTrailer(movie?.name || \"\")\r\n            .then((url) => {\r\n              const urlParams = new URLSearchParams(new URL(url).search);\r\n              setTrailerUrl(urlParams.get(\"v\"));\r\n            })\r\n            .catch((err) => console.log(err));\r\n        }\r\n      };\r\n  \r\n\r\n    return (\r\n        <div className=\"row__\">\r\n            <h1>{title}</h1>\r\n            <div className=\"row_posters\">\r\n             {movies.map(movie =>(\r\n                 <img\r\n                 key = {movie.id} \r\n                 onClick={()=>handleClick(movie)}\r\n                 className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                 src={`${baseURL}${isLargeRow?movie.poster_path :movie.backdrop_path}`}\r\n                 alt={movie.name} />\r\n             ))}\r\n          </div>\r\n          {trailerUrl != \"\" && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","D:\\projects\\React\\netflixclone\\src\\Requests.js",[],"D:\\projects\\React\\netflixclone\\src\\axios.js",[],"D:\\projects\\React\\netflixclone\\src\\Component\\Banner.js",[],"D:\\projects\\React\\netflixclone\\src\\Component\\Nav.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":61,"column":23,"nodeType":"45","messageId":"46","endLine":61,"endColumn":25},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]